{"version":3,"sources":["components/AddCategory.js","helpers/getFits.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFechGifs","GitExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAWV,GAAU,EAAdS,GAAc,EAAVT,KACrC,OACI,sBAAKc,UAAY,6CAAjB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCAJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFd,SAAEA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAoBvC,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAKtB,CAACpB,IAEGqB,EDhBwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,6BAAMpB,IAELoB,GAAW,mBAAGJ,UAAY,mCAAf,wBAEZ,qBAAKA,UAAW,YAAhB,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGQA,GAFGA,EAAIC,aEc5BgB,EA9BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCfpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.eb9e1406.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [inputValue,...cats] )\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// export const AddCategory = () => {\r\n\r\n//     const [inputValue, setInputValue] = useState('Hola Mundo')\r\n\r\n//     const handleInputChange = (e) => {\r\n//         setInputValue(e.target.value)\r\n//     }\r\n\r\n//     const handleSumit = (e) =>{\r\n//         e.preventDefault()\r\n//     }\r\n\r\n//     return (\r\n//         <form onSubmit = {handleSumit} >\r\n//             <input \r\n//                 type=\"text\"\r\n//                 value = { inputValue }\r\n//                 onChange = { handleInputChange }\r\n//             />\r\n//         </form>\r\n//     )\r\n// }\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=5r7Dmis6g3StPxGTbhMfYvGsqSchSpQ2`\r\n    const resp = await fetch( url )\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, id, url} ) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeInLeft\" >\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState ,useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\n// import { getGifs } from '../helpers/getFits';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data:images, loading} = useFechGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            {loading && <p className = \"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className= \"card-grid\" >\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key = {img.id}\r\n                                // img = {img}\r\n                                {...img} \r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getFits\";\r\n\r\n\r\nexport const useFechGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // {data:[], loading:true}\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( cats => [...categories,'HunterXHunter'] )\r\n    //     setCategories( [...categories, 'HunterXHunter']  )\r\n    // }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid  \r\n                            key = { category }\r\n                            category = { category } \r\n                        />))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\n// const divRoot = document.querySelector('#root')\n\nReactDOM.render( \n  <GitExpertApp />, \n  document.querySelector('#root') \n);\n\n"],"sourceRoot":""}